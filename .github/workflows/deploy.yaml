name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build -t eggop92/docker-frontend --file Dockerfile.dev .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: frontend
        environment_name: Frontend-env
        version_label: 12345
        region: eu-north-1
        deployment_package: deploy.zip
    # steps:
    #   - name: Elastic Beanstalk Deployer
    #   # You may pin to the exact commit or the version.
    #   # uses: davecarlson/beanstalk-deploy@3434dfe3650b91c8325d9a75097adc641cfa563b
    #   - uses: davecarlson/beanstalk-deploy@v23
    #   - with:
    #     # AWS Access Key
    #     aws_access_key: 
    #     # AWS Secret Key
    #     aws_secret_key: 
    #     # AWS Session Token when using temporary security credentials such as when assuming a role in AWS through STS
    #     aws_session_token: # optional
    #     # AWS Region
    #     region: 
    #     # Beanstalk application name
    #     application_name: 
    #     # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
    #     environment_name: # optional
    #     # Version label for new Beanstalk version
    #     version_label: 
    #     # Version description for the new Beanstalk version
    #     version_description: # optional
    #     # Zip file with the version to deploy. If skipped the action will deploy existing version.
    #     deployment_package: # optional
    #     # Whether the action should skip creating a new bucket and use the given one to upload the deployment package to instead. When omitted the actions will (try to) create a new one during deployment.
    #     existing_bucket_name: # optional
    #     # If set to "true" then the action will deploy an existing version with the given version_label if it already exists, but otherwise create the version and deploy it. If set to true for an action with no environment name it will upload a version if it does not exist already, but do nothing if the version already exists.
    #     use_existing_version_if_available: # optional
    #     # Whether the action should wait for the deployment to finish and log status messages during the wait. Default is "true". If set to "false" the action will start the deployment on Beanstalk and then exit.
    #     wait_for_deployment: # optional
    #     # How many seconds to wait for the environment to return to Green state after deployment is finished. Default is 30 seconds.
    #     wait_for_environment_recovery: # optional
    #     # How many times to exponentially back-off on Throttling exceptions. Default: 10
    #     max_backoff_retries: # optional
          
